---
layout: post
title: Чек-лист хороших инженерных практик в компаниях
subtitle:
summary: Подходы к тестированию, развертыванию, разработке и процессам
cover_url: "Путь к файлу-обложке для соц. сетей, например, /images/vscode_eslint.png"
---

Разработка программного обеспечения нетривиальный процесс, который имеет тенденцию значительно усложняться с ростом количества участников. Больше людей в команде - большего числа коммуникаций и необходимости синхронизироваться (обмениваться знаниями о частях системы и происходящих процессах, следить за бизнесом и его требованиями). Растет цена ошибки, система перестает умещаться в голове одного разработчика, изменения в одном месте влияют на изменения в других местах. В этих условиях, разные команды проявляют себя по разному, некоторые продолжают поддерживать высокий темп разработки и регулярно выпускают новые версии, у других происходит сильное замедление, переговоры отнимают больше времени чем разработка, качество падает, выпуск новой версии становится стрессом и приключением. Общая скорость внедрения новых фич в таких командах может различаться во много раз и даже на порядок.

Причин такой катастрофической разницы довольно много. Вот некоторые из них:

* Ошибки топ-менеджмента в бизнесе. Если бизнес делает не то что надо, то не важно насколько эффективно он делает не то что надо, в конце концов бизнес закроется. Эта тема выходит за рамки текущего гайда.
* Ошибки топ-менеджмента в области процессов. Если на этом уровне все плохо, то все остальное вторично. Даже неверная система бонусов может привести к разладу в команде и полной блокировке разработки в конечном счете.
* Человеческий фактор. Личные качества и человеческие пороки могут создать проблемы как и остальным членам команды, так и всему проекту в целом. В этот пункт входит и политика, игра в которую приводит к краху проектов. Главная проблема что эту часть невозможно выправить никакими процессами. Только изменение поведения, либо расставание.
* Плохой процесс разработки. Эта тема касается всех инженеров без исключения. Сюда входит все начиная от взаимодействия и работы с задачами, заканчивая тестированием и проведением ревью кода.

На некоторые проблемы повлиять либо сложно либо невозможно, но другие, особенно относящиеся к инженерным практикам, нужно постоянно улучшать и менять. Программисты должны принимать в этом самое активное участие. Полезные материалы по теме:

* [Книги](https://ru.hexlet.io/pages/recommended-books)
    * Человеческий фактор. Успешные проекты и команды
    * Мифический человеко-месяц, или Как создаются программные системы
    * Идеальный программист. Как стать профессионалом разработки ПО
    * Цель. Процесс непрерывного совершенствования
* [Что такое DevOps?](https://ru.atlassian.com/devops)

Ниже приводится чек-лист, который позволяет понять, используются ли в команде те инженерные практики, которые считаются наиболее удачными.

### Заголовок раздела

Пример с картинкой:

![vs code intellisense](/images/javascript_javascript_intellisense.gif)

### Стандарты кодирования

Пример с картинкой:

![vs code intellisense](/images/javascript_javascript_intellisense.gif)

---

*Имя и фамилия автора*
